var Game=function(t){var e={};function i(o){if(e[o])return e[o].exports;var a=e[o]={i:o,l:!1,exports:{}};return t[o].call(a.exports,a,a.exports,i),a.l=!0,a.exports}return i.m=t,i.c=e,i.d=function(t,e,o){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)i.d(o,a,function(e){return t[e]}.bind(null,a));return o},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=1)}([function(t,e,i){"use strict";var o,a;Object.defineProperty(e,"__esModule",{value:!0}),e.EXPLOSION_RADIUS=e.BUILDING_RADIUS=e.BULLET_RADIUS=e.TANK_RADIUS=e.EXPLOSION_IMAGE=e.BULLET_IMAGE=e.BUILDING_IMAGE=e.TANK_IMAGE=e.IMAGE=e.CANVAS=e.AUDIO=e.ACTIONS=e.ACTION=e.BUILDINGS=e.BUILDING=e.EXPLOSION=e.DIRECTION=e.ENEMY_TANKS=e.TANK=void 0,function(t){t[t.UP=0]="UP",t[t.DOWN=1]="DOWN",t[t.LEFT=2]="LEFT",t[t.RIGHT=3]="RIGHT"}(o||(o={})),e.DIRECTION=o,function(t){t[t.PLAYER_TANK=0]="PLAYER_TANK",t[t.NORMAL_TANK=1]="NORMAL_TANK",t[t.SWIFT_TANK=2]="SWIFT_TANK",t[t.MEDIUM_TANK=3]="MEDIUM_TANK",t[t.HEAVY_TANK=4]="HEAVY_TANK"}(a||(a={})),e.TANK=a;e.TANK_RADIUS=20;e.BULLET_RADIUS=4;e.BUILDING_RADIUS=8;e.EXPLOSION_RADIUS=16;e.TANK_IMAGE=[[[[4,8,52,52],[68,8,52,52]],[[264,4,52,52],[328,4,52,52]],[[136,4,52,52],[204,4,52,52]],[[392,4,52,52],[460,4,52,52]]],[[[524,264,52,60],[588,264,52,60]],[[780,264,52,60],[844,264,52,60]],[[648,272,60,52],[712,272,60,52]],[[908,268,60,52],[972,268,60,52]]],[[[524,328,52,60],[588,328,52,60]],[[780,332,52,60],[844,332,52,60]],[[648,336,60,52],[712,336,60,52]],[[908,332,60,52],[972,332,60,52]]],[[[524,396,52,60],[588,396,52,60]],[[780,396,52,60],[844,396,52,60]],[[648,404,60,52],[712,404,60,52]],[[908,400,60,52],[972,400,60,52]]],[[[524,460,52,60],[588,460,52,60]],[[780,460,52,60],[844,460,52,60]],[[648,464,60,52],[712,464,60,52]],[[904,464,60,52],[968,464,60,52]]]];var n,s=[a.NORMAL_TANK,a.SWIFT_TANK,a.HEAVY_TANK];e.ENEMY_TANKS=s,function(t){t[t.BULLET_EXPLOSION=0]="BULLET_EXPLOSION",t[t.TANK_EXPLOSION=1]="TANK_EXPLOSION"}(n||(n={})),e.EXPLOSION=n;var r;e.EXPLOSION_IMAGE=[[1064,520,44,44],[1244,516,124,116]],function(t){t[t.BRICK=0]="BRICK",t[t.STEEL=1]="STEEL",t[t.JUNGLE=2]="JUNGLE",t[t.WATER=3]="WATER",t[t.ROAD=4]="ROAD",t[t.NONE=5]="NONE"}(r||(r={})),e.BUILDING=r;e.BULLET_IMAGE=[[1320,408,12,16],[1384,408,12,16],[1348,408,16,12],[1412,408,16,12]];e.BUILDING_IMAGE=[[1052,0,32,32],[1052,64,32,32],[1116,128,32,32],[1052,192,32,32]];var c,l=[r.BRICK,r.STEEL,r.JUNGLE];e.BUILDINGS=l,function(t){t[t.MOVE_UP=0]="MOVE_UP",t[t.MOVE_DOWN=1]="MOVE_DOWN",t[t.MOVE_LEFT=2]="MOVE_LEFT",t[t.MOVE_RIGHT=3]="MOVE_RIGHT",t[t.STAY=4]="STAY",t[t.SHOOT=5]="SHOOT",t[t.DO_NOTHING=6]="DO_NOTHING"}(c||(c={})),e.ACTION=c;var h=[c.MOVE_UP,c.MOVE_DOWN,c.MOVE_LEFT,c.MOVE_RIGHT,c.STAY,c.SHOOT,c.DO_NOTHING];e.ACTIONS=h;var d=new function(){this.start=document.getElementById("start"),this.collect=document.getElementById("collect"),this.shoot=document.getElementById("shoot"),this.explosion=document.getElementById("explosion"),this.pause=document.getElementById("pause"),this.pick=document.getElementById("pick"),this.level_up=document.getElementById("level_up"),this.idle=document.getElementById("idle"),this.move=document.getElementById("move"),this.hit=document.getElementById("hit"),this.be_hit=document.getElementById("be_hit"),this.game_over=document.getElementById("game_over")};e.AUDIO=d;var u=document.getElementById("canvas");e.CANVAS=u;var I=document.getElementById("sprites");e.IMAGE=I},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.context=e.GAME=e.main=void 0;var o,a=i(0),n=i(2),s=i(6),r=i(3),c=i(7),l=0,h=!1;e.context=o;var d=!1,u=!1,I=!1,O=!1,T=0,N=0,A={tanks:[],bullets:[],explosions:[],buildings:[]};function E(){var t=new n.Tank({x:o.canvas.width/2,y:o.canvas.height},a.DIRECTION.UP,a.TANK.PLAYER_TANK);A.tanks.unshift(t)}e.GAME=A,e.main=function(){e.context=o=a.CANVAS.getContext("2d"),o.canvas.width=window.innerWidth,o.canvas.height=window.innerHeight,c.buildingsGenerator(),function(){var t=window.localStorage.getItem("state");t||(t="");var e=JSON.parse(t),i=new n.Tank({x:o.canvas.width/2,y:o.canvas.height},a.DIRECTION.UP,a.TANK.PLAYER_TANK);null!=e&&(i.blood=e.blood,i.armor=e.armor,i.speed=e.speed,i.level=e.level,i.bullet.speed=e.bullet.speed,i.bullet.damage=e.bullet.damage);A.tanks.unshift(i)}(),a.AUDIO.start.play().then((function(){})),document.onkeydown=function(t){try{switch(t.code){case"KeyA":d=!0,A.tanks[0].moving=!0,A.tanks[0].direction=a.DIRECTION.LEFT;break;case"KeyD":u=!0,A.tanks[0].moving=!0,A.tanks[0].direction=a.DIRECTION.RIGHT;break;case"KeyW":I=!0,A.tanks[0].moving=!0,A.tanks[0].direction=a.DIRECTION.UP;break;case"KeyS":O=!0,A.tanks[0].moving=!0,A.tanks[0].direction=a.DIRECTION.DOWN;break;case"KeyP":h=!h,a.AUDIO.pause.play().then((function(){}));break;case"Space":A.tanks[0].shoot();break;case"F11":case"KeyR":location.reload();break;case"KeyB":E()}}catch(t){console.log(t.toString())}},document.onmousedown=function(t){0==t.button&&A.tanks[0].shoot()},document.onkeyup=function(t){switch(t.code){case"KeyA":d=!1;break;case"KeyD":u=!1;break;case"KeyW":I=!1;break;case"KeyS":O=!1;break;case"KeyC":A.buildings=[]}O||I||u||d||(A.tanks[0].moving=!1)},document.ontouchstart=function(t){T=t.touches[0].pageX,N=t.touches[0].pageY},document.ontouchend=function(t){var e=t.changedTouches[0].pageX,i=t.changedTouches[0].pageY,o=Math.abs(e-T),n=Math.abs(i-N);A.tanks[0]&&(A.tanks[0].moving=!0,A.tanks[0].shoot()),Math.max(o,n)<30||(A.tanks[0].direction=o>n?e>T?a.DIRECTION.RIGHT:a.DIRECTION.LEFT:i>N?a.DIRECTION.DOWN:a.DIRECTION.UP)},function t(){!function(){var t=A.tanks[0].level;if(h)return;0===l&&Math.random()>.7-t/50&&A.tanks.push(new n.Tank({x:Math.random()*o.canvas.width,y:0},a.DIRECTION.DOWN,r.randomChooseFrom(a.ENEMY_TANKS),r.randomNumber(2*t/3,t+5)));l+=1,l%=60,function(){for(var t=0;t<A.bullets.length;t++)A.bullets[t].alive||A.bullets.splice(t,1);for(t=0;t<A.bullets.length;t++)A.bullets[t].move()}(),function(){for(var t=0;t<A.buildings.length;t++)A.buildings[t].alive||A.buildings.splice(t,1)}(),function(){for(var t=!1,e=0;e<A.tanks.length;e++)A.tanks[e].alive||(A.explosions.push({coordinate:A.tanks[e].coordinate,type:a.EXPLOSION.TANK_EXPLOSION}),A.tanks.splice(e,1),t=0==e);for(A.tanks[0].move(),A.tanks[0].lastShootCount+=1,e=1;e<A.tanks.length;e++)A.tanks[e].move(),A.tanks[e].lastShootCount+=1;if(l%5==0)for(e=1;e<A.tanks.length;e++){var i=A.tanks[0],o=A.tanks[e];s.AI(o,i)}t&&a.AUDIO.game_over.play().then((function(){E()}))}()}(),function(){o.clearRect(0,0,o.canvas.width,o.canvas.height);var t=A.tanks;t=(t=t.concat(A.bullets)).concat(A.buildings);for(var e=0;e<t.length;e++)r.drawEntity(t[e]);for(e=0;e<A.explosions.length;e++){var i=A.explosions[e];r.drawExplosion(i.type,i.coordinate)}(function(){o.font="20px monospace",o.fillStyle="white";var t=A.tanks[0];o.fillText("blood: "+t.blood.toFixed(1)+" armor: "+t.armor.toFixed(2),20,30),o.fillText("speed: "+t.speed.toFixed(1)+" level: "+t.level,20,50),o.fillText("shoot interval: "+t.shootInterval,20,70),o.fillText("bullet damage: "+t.bullet.damage.toFixed(1)+" bullet speed: "+t.bullet.speed.toFixed(1),20,90)})(),A.explosions=[]}(),window.localStorage.setItem("state",JSON.stringify(A.tanks[0])),requestAnimationFrame(t)}()}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Tank=void 0;var o=i(0),a=i(1),n=i(4),s=function(){function t(t,e,i,a){switch(void 0===a&&(a=1),this.coordinate=t,this.direction=e,this.lastShootCount=0,this.type=i,this.radius=o.TANK_RADIUS,this.shootInterval=60,this.alive=!0,this.moving=!0,this.imageTurn=!0,this.canTankPass=!1,this.canBulletPass=!1,this.actionList=[],this.bullet={damage:5,speed:10},this.blood=10,this.armor=.5,this.speed=2.5,this.attackInterval=40,this.level=a,this.type){case o.TANK.PLAYER_TANK:this.basic={blood:10,armor:.5,speed:2.5,attackInterval:45,bulletDamage:5,bulletSpeed:15};break;case o.TANK.NORMAL_TANK:this.basic={blood:10,armor:.5,speed:2.5,attackInterval:45,bulletDamage:4,bulletSpeed:10};break;case o.TANK.SWIFT_TANK:this.basic={blood:6,armor:.35,speed:3.5,attackInterval:30,bulletDamage:5,bulletSpeed:15};break;case o.TANK.HEAVY_TANK:this.basic={blood:20,armor:.7,speed:.7,attackInterval:60,bulletDamage:10,bulletSpeed:4};break;default:this.basic={blood:10,armor:.6,speed:3,attackInterval:20,bulletDamage:5,bulletSpeed:15},console.error("Unexpected tank type: "+this.type)}this.calculateAttributes()}return t.prototype.calculateAttributes=function(){this.blood=Math.min(this.basic.blood+25,this.basic.blood+this.level),this.speed=Math.min(this.basic.speed+8,this.basic.speed+.1*this.level),this.armor=Math.min(.8,this.basic.armor+.04*this.level),this.bullet.speed=Math.min(this.basic.speed+15,this.basic.bulletSpeed+.1*this.level),this.bullet.damage=Math.min(this.basic.bulletDamage+25,this.basic.bulletDamage+.3*this.level),this.shootInterval=Math.max(this.basic.attackInterval-20,this.basic.attackInterval-this.level)},t.prototype.levelUp=function(){this.level++,this.calculateAttributes()},t.prototype.beAttacked=function(t,e){this.blood-=Math.max(1,t.damage*(1-this.armor)),this.blood<=0&&(this.blood=0,this.alive=!1,o.AUDIO.explosion.play().then((function(){})),e.levelUp())},t.prototype.move=function(){if(this.moving){var e=a.GAME.tanks;e=e.concat(a.GAME.buildings);var i=0,n=0;switch(this.direction){case o.DIRECTION.UP:n=-this.speed;break;case o.DIRECTION.DOWN:n=this.speed;break;case o.DIRECTION.LEFT:i=-this.speed;break;case o.DIRECTION.RIGHT:i=this.speed}this.coordinate.x+=i,this.coordinate.y+=n;for(var s=0;s<e.length;s++)if(!e[s].canTankPass&&Math.abs(this.coordinate.y-e[s].coordinate.y)<this.radius+e[s].radius&&this.coordinate!==e[s].coordinate&&Math.abs(this.coordinate.x-e[s].coordinate.x)<this.radius+e[s].radius){!0,this.coordinate.x-=i,this.coordinate.y-=n;break}this.coordinate=t.bound(this.coordinate,this.radius)}},t.bound=function(t,e){return t.x<e?t.x=e:t.x+e>a.context.canvas.width&&(t.x=a.context.canvas.width-e),t.y<e?t.y=e:t.y+e>a.context.canvas.height&&(t.y=a.context.canvas.height-e),t},t.prototype.shoot=function(){this.lastShootCount>=this.shootInterval&&(a.GAME.bullets.push(new n.Bullet(this.coordinate,this.direction,this.bullet.damage,this.bullet.speed,this)),this.lastShootCount=0,this.type===o.TANK.PLAYER_TANK&&o.AUDIO.shoot.play().then((function(){})))},t.prototype.draw=function(){switch(this.type){case o.TANK.PLAYER_TANK:a.context.drawImage(o.IMAGE,32*this.direction,0,32,32,this.coordinate.x-16,this.coordinate.y-16,32,32);break;case o.TANK.NORMAL_TANK:a.context.drawImage(o.IMAGE,32*this.direction,32,32,32,this.coordinate.x-16,this.coordinate.y-16,32,32);break;case o.TANK.SWIFT_TANK:a.context.drawImage(o.IMAGE,32*(4+this.direction),32,32,32,this.coordinate.x-16,this.coordinate.y-16,32,32);break;case o.TANK.HEAVY_TANK:a.context.drawImage(o.IMAGE,32*(8+this.direction),64,32,32,this.coordinate.x-16,this.coordinate.y-16,32,32)}},t}();e.Tank=s},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.drawExplosion=e.drawEntity=e.randomNumber=e.randomChooseFrom=void 0;var o=i(1),a=i(0),n=i(2),s=i(5),r=i(4);e.randomChooseFrom=function(t){return t[Math.floor(Math.random()*t.length)]},e.randomNumber=function(t,e){return Math.floor(Math.random()*(e-t))+t},e.drawEntity=function(t){var e,i=t.coordinate.x,c=t.coordinate.y,l=16,h=16;t instanceof n.Tank?(t.moving&&(t.imageTurn=!t.imageTurn),e=a.TANK_IMAGE[t.type][t.direction][Number(t.imageTurn)],l=2*a.TANK_RADIUS,h=2*a.TANK_RADIUS):t instanceof s.Building?(e=a.BUILDING_IMAGE[t.type],l=2*a.BUILDING_RADIUS,h=2*a.BUILDING_RADIUS):t instanceof r.Bullet&&(e=a.BULLET_IMAGE[t.direction],l=2*a.BULLET_RADIUS,h=2*a.BULLET_RADIUS),o.context.drawImage(a.IMAGE,e[0],e[1],e[2],e[3],i-l/2,c-h/2,l,h)},e.drawExplosion=function(t,e){var i=a.EXPLOSION_IMAGE[t];o.context.drawImage(a.IMAGE,i[0],i[1],i[2],i[3],e.x-a.EXPLOSION_RADIUS,e.y-a.EXPLOSION_RADIUS,2*a.EXPLOSION_RADIUS,2*a.EXPLOSION_RADIUS)}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Bullet=void 0;var o=i(0),a=i(1),n=i(2),s=i(3),r=function(){function t(t,e,i,a,n){this.direction=e,this.shooter=n,this.canBulletPass=!1,this.canTankPass=!1;var s=0,r=0;switch(this.direction){case o.DIRECTION.UP:r=-20;break;case o.DIRECTION.DOWN:r=20;break;case o.DIRECTION.LEFT:s=-20;break;case o.DIRECTION.RIGHT:s=20}this.coordinate={x:t.x+s,y:t.y+r},this.damage=i,this.alive=!0,this.speed=a,this.radius=o.BULLET_RADIUS}return t.prototype.move=function(){if(this.alive)switch(this.direction){case o.DIRECTION.UP:this.coordinate.y-this.speed<=0?(this.coordinate.y=0,this.explosion()):this.checkAllObstacles(),this.coordinate.y-=this.speed;break;case o.DIRECTION.DOWN:this.coordinate.y+this.speed>=a.context.canvas.height?(this.coordinate.y=a.context.canvas.height,this.explosion()):this.checkAllObstacles(),this.coordinate.y+=this.speed;break;case o.DIRECTION.LEFT:this.coordinate.x-this.speed<=0?(this.coordinate.x=0,this.explosion()):this.checkAllObstacles(),this.coordinate.x-=this.speed;break;case o.DIRECTION.RIGHT:this.coordinate.x+this.speed>=a.context.canvas.width?(this.coordinate.x=a.context.canvas.width,this.explosion()):this.checkAllObstacles(),this.coordinate.x+=this.speed;break;default:console.error("Unexpected direction")}},t.prototype.explosion=function(){this.alive=!1,a.GAME.explosions.push({coordinate:this.coordinate,type:o.EXPLOSION.BULLET_EXPLOSION})},t.prototype.checkAllObstacles=function(){var e=a.GAME.tanks;e=e.concat(a.GAME.buildings);for(var i=0;i<e.length;i++)if(!e[i].canBulletPass&&e[i]!=this.shooter&&t.isHit(this.coordinate,e[i].coordinate,e[i].radius)){this.explosion(),e[i].beAttacked(this,this.shooter),e[i]instanceof n.Tank&&(this.shooter.type==o.TANK.PLAYER_TANK?o.AUDIO.hit.play().then((function(){})):e[i].type==o.TANK.PLAYER_TANK&&o.AUDIO.be_hit.play().then((function(){})));break}},t.prototype.draw=function(){s.drawEntity(this)},t.prototype.beAttacked=function(t,e){throw new Error("Method not implemented.")},t.isHit=function(t,e,i){return t.x>=e.x-i&&t.x<=e.x+i&&t.y>=e.y-i&&t.y<=e.y+i},t.prototype.levelUp=function(){},t}();e.Bullet=r},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Building=void 0;var o=i(0),a=i(1),n=function(){function t(t,e){switch(this.coordinate=t,this.alive=!0,this.type=e,this.radius=o.BUILDING_RADIUS,this.type){case o.BUILDING.BRICK:this.destroyLimit=10,this.canTankPass=!1,this.canBulletPass=!1;break;case o.BUILDING.STEEL:this.destroyLimit=20,this.canTankPass=!1,this.canBulletPass=!1;break;case o.BUILDING.JUNGLE:this.destroyLimit=100,this.canTankPass=!0,this.canBulletPass=!0;break;case o.BUILDING.WATER:this.destroyLimit=100,this.canTankPass=!1,this.canBulletPass=!0;break;default:this.destroyLimit=100,this.canTankPass=!0,this.canBulletPass=!0}}return t.prototype.beAttacked=function(t,e){t.damage>=this.destroyLimit&&(this.alive=!1)},t.prototype.draw=function(){this.alive&&a.context.drawImage(o.IMAGE,16*this.type,96,16,16,this.coordinate.x-8,this.coordinate.y-8,16,16)},t.prototype.levelUp=function(){},t}();e.Building=n},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.AI=void 0;var o=i(0),a=i(3);e.AI=function(t,e){switch(t.actionList.pop()){case o.ACTION.MOVE_UP:t.moving=!0,t.direction=o.DIRECTION.UP;break;case o.ACTION.MOVE_DOWN:t.moving=!0,t.direction=o.DIRECTION.DOWN;break;case o.ACTION.MOVE_LEFT:t.moving=!0,t.direction=o.DIRECTION.LEFT;break;case o.ACTION.MOVE_RIGHT:t.moving=!0,t.direction=o.DIRECTION.RIGHT;break;case o.ACTION.STAY:t.moving=!1;break;case o.ACTION.SHOOT:t.shoot();break;case o.ACTION.DO_NOTHING:break;default:t.moving=!0;var i=Math.random();i<.5?(t.actionList.push(a.randomChooseFrom(o.ACTIONS)),t.actionList.concat([o.ACTION.SHOOT,o.ACTION.SHOOT,o.ACTION.SHOOT,o.ACTION.SHOOT])):i<.8?Math.floor(100*i)%2==0?t.coordinate.x<e.coordinate.x?t.actionList.push(o.ACTION.MOVE_RIGHT):t.actionList.push(o.ACTION.MOVE_LEFT):t.coordinate.y<e.coordinate.y?t.actionList.push(o.ACTION.MOVE_DOWN):t.actionList.push(o.ACTION.MOVE_UP):i<.8?t.actionList.concat([o.ACTION.MOVE_UP,o.ACTION.DO_NOTHING,o.ACTION.SHOOT,o.ACTION.MOVE_LEFT,o.ACTION.DO_NOTHING,o.ACTION.SHOOT,o.ACTION.MOVE_DOWN,o.ACTION.DO_NOTHING,o.ACTION.SHOOT,o.ACTION.MOVE_RIGHT,o.ACTION.DO_NOTHING,o.ACTION.SHOOT]):t.actionList.push(o.ACTION.SHOOT)}}},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.buildingsGenerator=void 0;var o,a,n=i(0),s=i(5),r=i(1),c=[];function l(t,e,i){var o={x:i.x,y:e.y},a={x:e.x,y:i.y};h(t,e,o),h(t,e,a),h(t,a,i),h(t,o,i)}function h(t,e,i){if(Math.abs(e.x-i.x)>Math.abs(e.y-i.y)){if(e.x>i.x){var o=i;i=e,e=o}for(var a=e.x;a<=i.x;a++){var n=d(a);r=u(r=e.y+(i.y-e.y)*((a-e.x)/(i.x-e.x))),c[n][r]=t}}else{if(e.y>i.y){o=i;i=e,e=o}for(var s=e.y;s<=i.y;s++){var r=u(s);n=d(n=e.x+(i.x-e.x)*((s-e.y)/(i.y-e.y))),c[n][r]=t}}}function d(t){return(t=Math.floor(t))<0?0:t>=o?o-1:t}function u(t){return(t=Math.floor(t))<0?0:t>=a?a-1:t}e.buildingsGenerator=function(){o=Math.floor(r.context.canvas.width/16),a=Math.floor(r.context.canvas.height/16);for(var t=0;t<o;t++){for(var e=[],i=0;i<a;i++)e.push(n.BUILDING.NONE);c.push(e)}var d=10;for(l(n.BUILDING.BRICK,{x:d,y:d},{x:o-d,y:a-d}),l(n.BUILDING.BRICK,{x:6,y:6},{x:o-6,y:a-6}),h(n.BUILDING.BRICK,{x:d,y:d},{x:o-d,y:a-d}),h(n.BUILDING.STEEL,{x:d,y:a-d},{x:o-d,y:d}),t=0;t<o;t++)for(i=0;i<a;i++){var u=c[t][i];u!=n.BUILDING.NONE&&r.GAME.buildings.push(new s.Building({x:16*t,y:16*i},u))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,