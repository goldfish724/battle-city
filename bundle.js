var Game=function(t){var e={};function i(o){if(e[o])return e[o].exports;var a=e[o]={i:o,l:!1,exports:{}};return t[o].call(a.exports,a,a.exports,i),a.l=!0,a.exports}return i.m=t,i.c=e,i.d=function(t,e,o){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)i.d(o,a,function(e){return t[e]}.bind(null,a));return o},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.CONTEXT=e.GAME=e.main=void 0;var o,a=i(1),s=i(2),n=i(4),r=0;e.CONTEXT=o;var c={tanks:[],bullets:[],explosions:[],buildings:[]};function h(){var t=new s.Tank({x:o.canvas.width/2,y:o.canvas.height},a.DIRECTION.UP,a.TANK.PLAYER_TANK);c.tanks.unshift(t)}function l(t,e){switch(t.actionList.pop()){case a.ACTION.MOVE_UP:t.moving=!0,t.direction=a.DIRECTION.UP;break;case a.ACTION.MOVE_DOWN:t.moving=!0,t.direction=a.DIRECTION.DOWN;break;case a.ACTION.MOVE_LEFT:t.moving=!0,t.direction=a.DIRECTION.LEFT;break;case a.ACTION.MOVE_RIGHT:t.moving=!0,t.direction=a.DIRECTION.RIGHT;break;case a.ACTION.STAY:t.moving=!1;break;case a.ACTION.SHOOT:t.shoot();break;case a.ACTION.DO_NOTHING:break;default:t.moving=!0;var i=Math.random();i<.5?(t.actionList.push(I(a.ACTIONS)),t.actionList.concat([a.ACTION.SHOOT,a.ACTION.SHOOT,a.ACTION.SHOOT,a.ACTION.SHOOT])):i<.8?Math.floor(100*i)%2==0?t.coordinate.x<e.coordinate.x?t.actionList.push(a.ACTION.MOVE_RIGHT):t.actionList.push(a.ACTION.MOVE_LEFT):t.coordinate.y<e.coordinate.y?t.actionList.push(a.ACTION.MOVE_DOWN):t.actionList.push(a.ACTION.MOVE_UP):i<.8?t.actionList.concat([a.ACTION.MOVE_UP,a.ACTION.DO_NOTHING,a.ACTION.SHOOT,a.ACTION.MOVE_LEFT,a.ACTION.DO_NOTHING,a.ACTION.SHOOT,a.ACTION.MOVE_DOWN,a.ACTION.DO_NOTHING,a.ACTION.SHOOT,a.ACTION.MOVE_RIGHT,a.ACTION.DO_NOTHING,a.ACTION.SHOOT]):t.actionList.push(a.ACTION.SHOOT)}}e.GAME=c,e.main=function(){e.CONTEXT=o=a.CANVAS.getContext("2d"),o.canvas.width=window.innerWidth,o.canvas.height=window.innerHeight,function(){for(var t=Math.floor(o.canvas.width/16),e=Math.floor(o.canvas.height/16),i=0;i<15+Math.floor(10*Math.random());i++){var s=I(a.BUILDINGS),r=Math.floor(Math.random()*t),h=Math.floor(Math.random()*e),l=2,d=2;Math.floor(10*Math.random())%2==0?l=Math.floor(Math.random()*(t-r)):d=Math.floor(Math.random()*(e-h));for(var T=r;T<r+l;T++)for(var u=h;u<h+d;u++)c.buildings.push(new n.Building({x:16*T,y:16*u},s))}}(),function(){var t=JSON.parse(window.localStorage.getItem("state")),e=new s.Tank({x:o.canvas.width/2,y:o.canvas.height},a.DIRECTION.UP,a.TANK.PLAYER_TANK);null!=t&&(e.blood=t.blood,e.armor=t.armor,e.speed=t.speed,e.level=t.level,e.bullet.speed=t.bullet.speed,e.bullet.damage=t.bullet.damage);c.tanks.unshift(e)}(),a.AUDIO.start.play().then((function(){})),function t(){!function(){0===r&&Math.random()>.7&&c.tanks.push(new s.Tank({x:Math.random()*o.canvas.width,y:0},a.DIRECTION.DOWN,I(a.ENEMY_TANKS)));r+=1,r%=60,function(){for(var t=0;t<c.bullets.length;t++)c.bullets[t].alive||c.bullets.splice(t,1);for(t=0;t<c.bullets.length;t++)c.bullets[t].move()}(),function(){for(var t=0;t<c.buildings.length;t++)c.buildings[t].alive||c.buildings.splice(t,1)}(),function(){for(var t=!1,e=0;e<c.tanks.length;e++)c.tanks[e].alive||(c.explosions.push({coordinate:c.tanks[e].coordinate,type:a.EXPLOSION.TANK_EXPLOSION}),c.tanks.splice(e,1),t=0==e);c.tanks[0].move(),c.tanks[0].lastShootCount+=1;for(e=1;e<c.tanks.length;e++)c.tanks[e].move(),c.tanks[e].lastShootCount+=1;if(r%5==0)for(e=1;e<c.tanks.length;e++){var i=c.tanks[0];l(c.tanks[e],i)}t&&a.AUDIO.game_over.play().then((function(){h()}))}()}(),function(){o.clearRect(0,0,o.canvas.width,o.canvas.height);var t=c.tanks;t=(t=t.concat(c.bullets)).concat(c.buildings);for(var e=0;e<t.length;e++)t[e].draw();for(e=0;e<c.explosions.length;e++){var i=c.explosions[e];i.type===a.EXPLOSION.TANK_EXPLOSION?o.drawImage(a.IMAGE,320,0,32,32,i.coordinate.x-16,i.coordinate.y-16,32,32):i.type===a.EXPLOSION.BULLET_EXPLOSION&&o.drawImage(a.IMAGE,352,0,32,32,i.coordinate.x-16,i.coordinate.y-16,32,32)}(function(){o.font="20px monospace",o.fillStyle="white";var t=c.tanks[0];o.fillText("blood: "+t.blood.toFixed(1)+"\narmor: "+t.armor.toFixed(2),20,30),o.fillText("speed: "+t.speed.toFixed(1)+"\nlevel: "+t.level,20,50),o.fillText("shoot interval: "+t.shootInterval,20,70),o.fillText("bullet damage: "+t.bullet.damage.toFixed(1)+"\nbullet speed: "+t.bullet.speed.toFixed(1),20,90)})(),c.explosions=[]}(),window.localStorage.setItem("state",JSON.stringify(c.tanks[0])),requestAnimationFrame(t)}()};var d=!1,T=!1,u=!1,O=!1;function I(t){return t[Math.floor(Math.random()*t.length)]}document.onkeydown=function(t){try{switch(t.code){case"KeyA":d=!0,c.tanks[0].moving=!0,c.tanks[0].direction=a.DIRECTION.LEFT;break;case"KeyD":T=!0,c.tanks[0].moving=!0,c.tanks[0].direction=a.DIRECTION.RIGHT;break;case"KeyW":u=!0,c.tanks[0].moving=!0,c.tanks[0].direction=a.DIRECTION.UP;break;case"KeyS":O=!0,c.tanks[0].moving=!0,c.tanks[0].direction=a.DIRECTION.DOWN;break;case"Space":c.tanks[0].shoot();break;case"F11":case"KeyR":location.reload();break;case"KeyB":h()}}catch(t){console.log(t.toString())}},document.onmousedown=function(t){0==t.button&&c.tanks[0].shoot()},document.onkeyup=function(t){switch(t.code){case"KeyA":d=!1;break;case"KeyD":T=!1;break;case"KeyW":u=!1;break;case"KeyS":O=!1;break;case"KeyC":c.buildings=[]}O||u||T||d||(c.tanks[0].moving=!1)}},function(t,e,i){"use strict";var o;Object.defineProperty(e,"__esModule",{value:!0}),e.IMAGE=e.CANVAS=e.AUDIO=e.ACTIONS=e.ACTION=e.BUILDINGS=e.BUILDING=e.EXPLOSION=e.DIRECTION=e.ENEMY_TANKS=e.TANK=void 0,function(t){t[t.PLAYER_TANK=0]="PLAYER_TANK",t[t.NORMAL_TANK=1]="NORMAL_TANK",t[t.SWIFT_TANK=2]="SWIFT_TANK",t[t.HEAVY_TANK=3]="HEAVY_TANK"}(o||(o={})),e.TANK=o;var a,s,n,r=[o.NORMAL_TANK,o.SWIFT_TANK,o.HEAVY_TANK];e.ENEMY_TANKS=r,function(t){t[t.UP=0]="UP",t[t.DOWN=1]="DOWN",t[t.LEFT=2]="LEFT",t[t.RIGHT=3]="RIGHT"}(a||(a={})),e.DIRECTION=a,function(t){t[t.TANK_EXPLOSION=0]="TANK_EXPLOSION",t[t.BULLET_EXPLOSION=1]="BULLET_EXPLOSION"}(s||(s={})),e.EXPLOSION=s,function(t){t[t.BRICK=0]="BRICK",t[t.CEMENT=1]="CEMENT",t[t.TREE=2]="TREE",t[t.WATER=3]="WATER",t[t.ROAD=4]="ROAD"}(n||(n={})),e.BUILDING=n;var c,h=[n.BRICK,n.CEMENT,n.TREE,n.WATER];e.BUILDINGS=h,function(t){t[t.MOVE_UP=0]="MOVE_UP",t[t.MOVE_DOWN=1]="MOVE_DOWN",t[t.MOVE_LEFT=2]="MOVE_LEFT",t[t.MOVE_RIGHT=3]="MOVE_RIGHT",t[t.STAY=4]="STAY",t[t.SHOOT=5]="SHOOT",t[t.DO_NOTHING=6]="DO_NOTHING"}(c||(c={})),e.ACTION=c;var l=[c.MOVE_UP,c.MOVE_DOWN,c.MOVE_LEFT,c.MOVE_RIGHT,c.STAY,c.SHOOT,c.DO_NOTHING];e.ACTIONS=l;var d=new function(){this.start=document.getElementById("start"),this.collect=document.getElementById("collect"),this.shoot=document.getElementById("shoot"),this.explosion=document.getElementById("explosion"),this.pause=document.getElementById("pause"),this.pick=document.getElementById("pick"),this.level_up=document.getElementById("level_up"),this.game_over=document.getElementById("game_over")};e.AUDIO=d;var T=document.getElementById("canvas");e.CANVAS=T;var u=document.getElementById("sprites");e.IMAGE=u},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Tank=void 0;var o=i(1),a=i(0),s=i(3),n=function(){function t(t,e,i){switch(this.coordinate=t,this.direction=e,this.lastShootCount=0,this.type=i,this.radius=16,this.shootInterval=60,this.alive=!0,this.moving=!0,this.canTankPass=!1,this.canBulletPass=!1,this.actionList=[],this.bullet={damage:5,speed:10},this.blood=10,this.armor=.5,this.speed=2.5,this.attackInterval=40,this.level=1,this.type){case o.TANK.PLAYER_TANK:this.blood=10,this.armor=.6,this.speed=3,this.attackInterval=20,this.bullet.damage=5,this.bullet.speed=15;break;case o.TANK.NORMAL_TANK:this.blood=10,this.armor=.5,this.speed=2.5,this.attackInterval=40,this.bullet.damage=4,this.bullet.speed=10;break;case o.TANK.SWIFT_TANK:this.blood=5,this.armor=.3,this.speed=3.5,this.attackInterval=20,this.bullet.damage=3,this.bullet.speed=15;break;case o.TANK.HEAVY_TANK:this.blood=20,this.armor=.7,this.speed=.7,this.attackInterval=60,this.bullet.damage=10,this.bullet.speed=4;break;default:console.error("Unexpected tank type: "+this.type)}}return t.prototype.levelUp=function(){this.level++,this.blood=Math.min(30,this.blood+1),this.speed=Math.min(10,this.speed+.1),this.armor=Math.min(.8,this.armor+.04),this.bullet.speed=Math.min(30,this.bullet.speed+.5),this.bullet.damage=Math.min(10,this.bullet.damage+.5),this.shootInterval=Math.max(10,this.shootInterval-2)},t.prototype.beAttacked=function(t,e){this.blood-=Math.max(1,t.damage*(1-this.armor)),this.blood<=0&&(this.blood=0,this.alive=!1,o.AUDIO.explosion.play().then((function(){})),e.levelUp())},t.prototype.move=function(){if(this.moving){var e=a.GAME.tanks;e=e.concat(a.GAME.buildings);var i=0,s=0;switch(this.direction){case o.DIRECTION.UP:s=-this.speed;break;case o.DIRECTION.DOWN:s=this.speed;break;case o.DIRECTION.LEFT:i=-this.speed;break;case o.DIRECTION.RIGHT:i=this.speed}this.coordinate.x+=i,this.coordinate.y+=s;for(var n=0;n<e.length;n++)if(!e[n].canTankPass&&Math.abs(this.coordinate.y-e[n].coordinate.y)<this.radius+e[n].radius&&this.coordinate!==e[n].coordinate&&Math.abs(this.coordinate.x-e[n].coordinate.x)<this.radius+e[n].radius){!0,this.coordinate.x-=i,this.coordinate.y-=s;break}this.coordinate=t.bound(this.coordinate,this.radius)}},t.bound=function(t,e){return t.x<e?t.x=e:t.x+e>a.CONTEXT.canvas.width&&(t.x=a.CONTEXT.canvas.width-e),t.y<e?t.y=e:t.y+e>a.CONTEXT.canvas.height&&(t.y=a.CONTEXT.canvas.height-e),t},t.prototype.shoot=function(){this.lastShootCount>=this.shootInterval&&(a.GAME.bullets.push(new s.Bullet(this.coordinate,this.direction,this.bullet.damage,this.bullet.speed,this)),this.lastShootCount=0,this.type===o.TANK.PLAYER_TANK&&o.AUDIO.shoot.play().then((function(){})))},t.prototype.draw=function(){switch(this.type){case o.TANK.PLAYER_TANK:a.CONTEXT.drawImage(o.IMAGE,32*this.direction,0,32,32,this.coordinate.x-16,this.coordinate.y-16,32,32);break;case o.TANK.NORMAL_TANK:a.CONTEXT.drawImage(o.IMAGE,32*this.direction,32,32,32,this.coordinate.x-16,this.coordinate.y-16,32,32);break;case o.TANK.SWIFT_TANK:a.CONTEXT.drawImage(o.IMAGE,32*(4+this.direction),32,32,32,this.coordinate.x-16,this.coordinate.y-16,32,32);break;case o.TANK.HEAVY_TANK:a.CONTEXT.drawImage(o.IMAGE,32*(8+this.direction),64,32,32,this.coordinate.x-16,this.coordinate.y-16,32,32)}},t}();e.Tank=n},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Bullet=void 0;var o=i(1),a=i(0),s=function(){function t(t,e,i,a,s){this.direction=e,this.shooter=s;var n=0,r=0;switch(this.direction){case o.DIRECTION.UP:r=-20;break;case o.DIRECTION.DOWN:r=20;break;case o.DIRECTION.LEFT:n=-20;break;case o.DIRECTION.RIGHT:n=20}this.coordinate={x:t.x+n,y:t.y+r},this.damage=i,this.alive=!0,this.speed=a,this.radius=1}return t.prototype.beAttacked=function(t,e){throw new Error("Method not implemented.")},t.prototype.move=function(){if(this.alive)switch(this.direction){case o.DIRECTION.UP:this.coordinate.y-this.speed<=0?(this.coordinate.y=0,this.explosion()):this.checkAllObstacles(),this.coordinate.y-=this.speed;break;case o.DIRECTION.DOWN:this.coordinate.y+this.speed>=a.CONTEXT.canvas.height?(this.coordinate.y=a.CONTEXT.canvas.height,this.explosion()):this.checkAllObstacles(),this.coordinate.y+=this.speed;break;case o.DIRECTION.LEFT:this.coordinate.x-this.speed<=0?(this.coordinate.x=0,this.explosion()):this.checkAllObstacles(),this.coordinate.x-=this.speed;break;case o.DIRECTION.RIGHT:this.coordinate.x+this.speed>=a.CONTEXT.canvas.width?(this.coordinate.x=a.CONTEXT.canvas.width,this.explosion()):this.checkAllObstacles(),this.coordinate.x+=this.speed;break;default:console.error("Unexpected direction")}},t.prototype.explosion=function(){this.alive=!1,a.GAME.explosions.push({coordinate:this.coordinate,type:o.EXPLOSION.BULLET_EXPLOSION})},t.prototype.checkAllObstacles=function(){var e=a.GAME.tanks;e=e.concat(a.GAME.buildings);for(var i=0;i<e.length;i++)if(!e[i].canBulletPass&&t.isHit(this.coordinate,e[i].coordinate,e[i].radius)){this.explosion(),e[i].beAttacked(this,this.shooter);break}},t.prototype.draw=function(){a.CONTEXT.drawImage(o.IMAGE,6*this.direction+80,96,6,6,this.coordinate.x-3,this.coordinate.y-3,6,6)},t.isHit=function(t,e,i){return t.x>=e.x-i&&t.x<=e.x+i&&t.y>=e.y-i&&t.y<=e.y+i},t.prototype.levelUp=function(){},t}();e.Bullet=s},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Building=void 0;var o=i(1),a=i(0),s=function(){function t(t,e){switch(this.coordinate=t,this.alive=!0,this.type=e,this.radius=8,this.type){case o.BUILDING.BRICK:this.destroyLimit=10,this.canTankPass=!1,this.canBulletPass=!1;break;case o.BUILDING.CEMENT:this.destroyLimit=20,this.canTankPass=!1,this.canBulletPass=!1;break;case o.BUILDING.TREE:this.destroyLimit=100,this.canTankPass=!0,this.canBulletPass=!0;break;case o.BUILDING.WATER:this.destroyLimit=100,this.canTankPass=!1,this.canBulletPass=!0;break;default:this.destroyLimit=100,this.canTankPass=!0,this.canBulletPass=!0}}return t.prototype.beAttacked=function(t,e){t.damage>=this.destroyLimit&&(this.alive=!1)},t.prototype.draw=function(){this.alive&&a.CONTEXT.drawImage(o.IMAGE,16*this.type,96,16,16,this.coordinate.x-8,this.coordinate.y-8,16,16)},t.prototype.levelUp=function(){},t}();e.Building=s}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,