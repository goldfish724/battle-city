var Game=function(t){var e={};function i(a){if(e[a])return e[a].exports;var s=e[a]={i:a,l:!1,exports:{}};return t[a].call(s.exports,s,s.exports,i),s.l=!0,s.exports}return i.m=t,i.c=e,i.d=function(t,e,a){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(i.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(a,s,function(e){return t[e]}.bind(null,s));return a},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.CONTEXT=e.GAME=e.main=void 0;var a,s=i(1),o=i(2),n=0;e.CONTEXT=a;var r={tanks:[],bullets:[],explosions:[],buildings:[]};function c(t,e){switch(t.actionList.pop()){case s.ACTION.MOVE_UP:t.moving=!0,t.direction=s.DIRECTION.UP;break;case s.ACTION.MOVE_DOWN:t.moving=!0,t.direction=s.DIRECTION.DOWN;break;case s.ACTION.MOVE_LEFT:t.moving=!0,t.direction=s.DIRECTION.LEFT;break;case s.ACTION.MOVE_RIGHT:t.moving=!0,t.direction=s.DIRECTION.RIGHT;break;case s.ACTION.STAY:t.moving=!1;break;case s.ACTION.SHOOT:t.shoot();break;case s.ACTION.DO_NOTHING:break;default:t.moving=!0;var i=Math.random();i<.5?(t.actionList.push(O(s.ACTIONS)),t.actionList.concat([s.ACTION.SHOOT,s.ACTION.SHOOT,s.ACTION.SHOOT,s.ACTION.SHOOT])):i<.8?Math.floor(100*i)%2==0?t.coordinate.x<e.coordinate.x?t.actionList.push(s.ACTION.MOVE_RIGHT):t.actionList.push(s.ACTION.MOVE_LEFT):t.coordinate.y<e.coordinate.y?t.actionList.push(s.ACTION.MOVE_DOWN):t.actionList.push(s.ACTION.MOVE_UP):i<.8?t.actionList.concat([s.ACTION.MOVE_UP,s.ACTION.DO_NOTHING,s.ACTION.SHOOT,s.ACTION.MOVE_LEFT,s.ACTION.DO_NOTHING,s.ACTION.SHOOT,s.ACTION.MOVE_DOWN,s.ACTION.DO_NOTHING,s.ACTION.SHOOT,s.ACTION.MOVE_RIGHT,s.ACTION.DO_NOTHING,s.ACTION.SHOOT]):t.actionList.push(s.ACTION.SHOOT)}}e.GAME=r,e.main=function(){e.CONTEXT=a=s.CANVAS.getContext("2d"),a.canvas.width=window.innerWidth,a.canvas.height=window.innerHeight,function(){for(var t=Math.floor(a.canvas.width/16),e=Math.floor(a.canvas.height/16),i=0;i<15+Math.floor(10*Math.random());i++){var n=O(s.BUILDINGS),c=Math.floor(Math.random()*t),h=Math.floor(Math.random()*e),d=2,T=2;Math.floor(10*Math.random())%2==0?d=Math.floor(Math.random()*(t-c)):T=Math.floor(Math.random()*(e-h));for(var l=c;l<c+d;l++)for(var N=h;N<h+T;N++)r.buildings.push(new o.Building({x:16*l,y:16*N},n))}}();var t=new o.Tank({x:a.canvas.width/2,y:a.canvas.height},s.DIRECTION.UP,s.TANK.PLAYER_TANK);r.tanks.push(t),s.AUDIO.start.play(),function t(){!function(){0===n&&Math.random()>.7&&r.tanks.push(new o.Tank({x:Math.random()*a.canvas.width,y:0},s.DIRECTION.DOWN,O(s.ENEMY_TANKS)));n+=1,n%=60,function(){for(var t=0;t<r.bullets.length;t++)r.bullets[t].alive||r.bullets.splice(t,1);for(t=0;t<r.bullets.length;t++)r.bullets[t].move()}(),function(){for(var t=0;t<r.buildings.length;t++)r.buildings[t].alive||r.buildings.splice(t,1)}(),function(){for(var t=0;t<r.tanks.length;t++)r.tanks[t].alive||(r.explosions.push({coordinate:r.tanks[t].coordinate,type:s.EXPLOSION.TANK_EXPLOSION}),r.tanks.splice(t,1));r.tanks[0].move(),r.tanks[0].lastShootCount+=1;for(t=1;t<r.tanks.length;t++)r.tanks[t].move(),r.tanks[t].lastShootCount+=1;if(n%5==0)for(t=1;t<r.tanks.length;t++){var e=r.tanks[0];c(r.tanks[t],e)}}()}(),function(){a.clearRect(0,0,a.canvas.width,a.canvas.height);var t=r.tanks;t=(t=t.concat(r.bullets)).concat(r.buildings);for(var e=0;e<t.length;e++)t[e].draw();for(e=0;e<r.explosions.length;e++){var i=r.explosions[e];i.type===s.EXPLOSION.TANK_EXPLOSION?a.drawImage(s.IMAGE,320,0,32,32,i.coordinate.x-16,i.coordinate.y-16,32,32):i.type===s.EXPLOSION.BULLET_EXPLOSION&&a.drawImage(s.IMAGE,352,0,32,32,i.coordinate.x-16,i.coordinate.y-16,32,32)}r.explosions=[]}(),requestAnimationFrame(t)}()};var h=!1,d=!1,T=!1,l=!1;function O(t){return t[Math.floor(Math.random()*t.length)]}document.onkeydown=function(t){try{switch(t.code){case"KeyA":h=!0,r.tanks[0].moving=!0,r.tanks[0].direction=s.DIRECTION.LEFT;break;case"KeyD":d=!0,r.tanks[0].moving=!0,r.tanks[0].direction=s.DIRECTION.RIGHT;break;case"KeyW":T=!0,r.tanks[0].moving=!0,r.tanks[0].direction=s.DIRECTION.UP;break;case"KeyS":l=!0,r.tanks[0].moving=!0,r.tanks[0].direction=s.DIRECTION.DOWN;break;case"Space":r.tanks[0].shoot();break;case"F11":case"KeyR":location.reload();break;case"KeyB":r.tanks[0]=new o.Tank({x:a.canvas.width/2,y:a.canvas.height},s.DIRECTION.UP,s.TANK.PLAYER_TANK)}}catch(t){console.log(t.toString())}},document.onkeyup=function(t){switch(t.code){case"KeyA":h=!1;break;case"KeyD":d=!1;break;case"KeyW":T=!1;break;case"KeyS":l=!1;break;case"KeyC":r.buildings=[]}l||T||d||h||(r.tanks[0].moving=!1)}},function(t,e,i){"use strict";var a;Object.defineProperty(e,"__esModule",{value:!0}),e.IMAGE=e.CANVAS=e.AUDIO=e.ACTIONS=e.ACTION=e.BUILDINGS=e.BUILDING=e.EXPLOSION=e.DIRECTION=e.ENEMY_TANKS=e.TANK=void 0,function(t){t[t.PLAYER_TANK=0]="PLAYER_TANK",t[t.NORMAL_TANK=1]="NORMAL_TANK",t[t.SWIFT_TANK=2]="SWIFT_TANK",t[t.HEAVY_TANK=3]="HEAVY_TANK"}(a||(a={})),e.TANK=a;var s,o,n,r=[a.NORMAL_TANK,a.SWIFT_TANK,a.HEAVY_TANK];e.ENEMY_TANKS=r,function(t){t[t.UP=0]="UP",t[t.DOWN=1]="DOWN",t[t.LEFT=2]="LEFT",t[t.RIGHT=3]="RIGHT"}(s||(s={})),e.DIRECTION=s,function(t){t[t.TANK_EXPLOSION=0]="TANK_EXPLOSION",t[t.BULLET_EXPLOSION=1]="BULLET_EXPLOSION"}(o||(o={})),e.EXPLOSION=o,function(t){t[t.BRICK=0]="BRICK",t[t.CEMENT=1]="CEMENT",t[t.TREE=2]="TREE",t[t.WATER=3]="WATER",t[t.ROAD=4]="ROAD"}(n||(n={})),e.BUILDING=n;var c,h=[n.BRICK,n.CEMENT,n.TREE,n.WATER];e.BUILDINGS=h,function(t){t[t.MOVE_UP=0]="MOVE_UP",t[t.MOVE_DOWN=1]="MOVE_DOWN",t[t.MOVE_LEFT=2]="MOVE_LEFT",t[t.MOVE_RIGHT=3]="MOVE_RIGHT",t[t.STAY=4]="STAY",t[t.SHOOT=5]="SHOOT",t[t.DO_NOTHING=6]="DO_NOTHING"}(c||(c={})),e.ACTION=c;var d=[c.MOVE_UP,c.MOVE_DOWN,c.MOVE_LEFT,c.MOVE_RIGHT,c.STAY,c.SHOOT,c.DO_NOTHING];e.ACTIONS=d;var T=new function(){this.start=document.getElementById("start"),this.collect=document.getElementById("collect"),this.shoot=document.getElementById("shoot"),this.explosion=document.getElementById("explosion"),this.pause=document.getElementById("pause"),this.pick=document.getElementById("pick"),this.level_up=document.getElementById("level_up")};e.AUDIO=T;var l=document.getElementById("canvas");e.CANVAS=l;var O=document.getElementById("sprites");e.IMAGE=O},function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Building=e.Coordinate=e.Bullet=e.Tank=void 0;var a=i(1),s=i(0),o=function(t,e){this.x=t,this.y=e};e.Coordinate=o;var n=function(){function t(t,e,i){switch(this.coordinate=t,this.direction=e,this.lastShootCount=0,this.type=i,this.radius=16,this.shootInterval=60,this.alive=!0,this.moving=!0,this.canTankPass=!1,this.canBulletPass=!1,this.actionList=[],this.bullet={damage:5,speed:10},this.blood=10,this.armor=.5,this.speed=2.5,this.attackInterval=40,this.type){case a.TANK.PLAYER_TANK:this.blood=10,this.armor=.6,this.speed=3,this.attackInterval=20,this.bullet.damage=5,this.bullet.speed=15;break;case a.TANK.NORMAL_TANK:this.blood=10,this.armor=.5,this.speed=2.5,this.attackInterval=40,this.bullet.damage=4,this.bullet.speed=10;break;case a.TANK.SWIFT_TANK:this.blood=5,this.armor=.3,this.speed=3.5,this.attackInterval=20,this.bullet.damage=3,this.bullet.speed=20;break;case a.TANK.HEAVY_TANK:this.blood=20,this.armor=.7,this.speed=1,this.attackInterval=60,this.bullet.damage=7,this.bullet.speed=7;break;default:console.error("Unexpected tank type: "+this.type)}}return t.prototype.beAttacked=function(t){this.blood-=t.damage*this.armor,this.blood<=0&&(this.blood=0,this.alive=!1,a.AUDIO.explosion.play())},t.prototype.move=function(){if(this.moving){var e=s.GAME.tanks;e=e.concat(s.GAME.buildings);var i=0,o=0;switch(this.direction){case a.DIRECTION.UP:o=-this.speed;break;case a.DIRECTION.DOWN:o=this.speed;break;case a.DIRECTION.LEFT:i=-this.speed;break;case a.DIRECTION.RIGHT:i=this.speed}this.coordinate.x+=i,this.coordinate.y+=o;for(var n=0;n<e.length;n++)if(!e[n].canTankPass&&Math.abs(this.coordinate.y-e[n].coordinate.y)<this.radius+e[n].radius-2&&this.coordinate!==e[n].coordinate&&Math.abs(this.coordinate.x-e[n].coordinate.x)<this.radius+e[n].radius-2){!0,this.coordinate.x-=i,this.coordinate.y-=o;break}this.coordinate=t.bound(this.coordinate,this.radius)}},t.bound=function(t,e){return t.x<e?t.x=e:t.x+e>s.CONTEXT.canvas.width&&(t.x=s.CONTEXT.canvas.width-e),t.y<e?t.y=e:t.y+e>s.CONTEXT.canvas.height&&(t.y=s.CONTEXT.canvas.height-e),t},t.prototype.shoot=function(){this.lastShootCount>=this.shootInterval&&(s.GAME.bullets.push(new r(this.coordinate,this.direction,this.bullet.damage,this.bullet.speed)),this.lastShootCount=0,this.type===a.TANK.PLAYER_TANK&&a.AUDIO.shoot.play())},t.prototype.draw=function(){switch(this.type){case a.TANK.PLAYER_TANK:s.CONTEXT.drawImage(a.IMAGE,32*this.direction,0,32,32,this.coordinate.x-16,this.coordinate.y-16,32,32);break;case a.TANK.NORMAL_TANK:s.CONTEXT.drawImage(a.IMAGE,32*this.direction,32,32,32,this.coordinate.x-16,this.coordinate.y-16,32,32);break;case a.TANK.SWIFT_TANK:s.CONTEXT.drawImage(a.IMAGE,32*(4+this.direction),32,32,32,this.coordinate.x-16,this.coordinate.y-16,32,32);break;case a.TANK.HEAVY_TANK:s.CONTEXT.drawImage(a.IMAGE,32*(8+this.direction),64,32,32,this.coordinate.x-16,this.coordinate.y-16,32,32)}},t}();e.Tank=n;var r=function(){function t(t,e,i,s){this.direction=e;var o=0,n=0;switch(this.direction){case a.DIRECTION.UP:n=-20;break;case a.DIRECTION.DOWN:n=20;break;case a.DIRECTION.LEFT:o=-20;break;case a.DIRECTION.RIGHT:o=20}this.coordinate={x:t.x+o,y:t.y+n},this.damage=i,this.alive=!0,this.speed=s,this.radius=1}return t.prototype.beAttacked=function(t){throw new Error("Method not implemented.")},t.prototype.move=function(){if(this.alive)switch(this.direction){case a.DIRECTION.UP:this.coordinate.y-this.speed<=0?(this.coordinate.y=0,this.explosion()):this.checkAllObstacles(),this.coordinate.y-=this.speed;break;case a.DIRECTION.DOWN:this.coordinate.y+this.speed>=s.CONTEXT.canvas.height?(this.coordinate.y=s.CONTEXT.canvas.height,this.explosion()):this.checkAllObstacles(),this.coordinate.y+=this.speed;break;case a.DIRECTION.LEFT:this.coordinate.x-this.speed<=0?(this.coordinate.x=0,this.explosion()):this.checkAllObstacles(),this.coordinate.x-=this.speed;break;case a.DIRECTION.RIGHT:this.coordinate.x+this.speed>=s.CONTEXT.canvas.width?(this.coordinate.x=s.CONTEXT.canvas.width,this.explosion()):this.checkAllObstacles(),this.coordinate.x+=this.speed;break;default:console.error("Unexpected direction")}},t.prototype.explosion=function(){this.alive=!1,s.GAME.explosions.push({coordinate:this.coordinate,type:a.EXPLOSION.BULLET_EXPLOSION})},t.prototype.checkAllObstacles=function(){var e=s.GAME.tanks;e=e.concat(s.GAME.buildings);for(var i=0;i<e.length;i++)if(!e[i].canBulletPass&&t.isHit(this.coordinate,e[i].coordinate,e[i].radius)){this.explosion(),e[i].beAttacked(this);break}},t.prototype.draw=function(){s.CONTEXT.drawImage(a.IMAGE,6*this.direction+80,96,6,6,this.coordinate.x-3,this.coordinate.y-3,6,6)},t.isHit=function(t,e,i){return t.x>=e.x-i&&t.x<=e.x+i&&t.y>=e.y-i&&t.y<=e.y+i},t}();e.Bullet=r;var c=function(){function t(t,e){switch(this.coordinate=t,this.alive=!0,this.type=e,this.radius=8,this.type){case a.BUILDING.BRICK:this.destroyLimit=2,this.canTankPass=!1,this.canBulletPass=!1;break;case a.BUILDING.CEMENT:this.destroyLimit=6,this.canTankPass=!1,this.canBulletPass=!1;break;case a.BUILDING.TREE:this.destroyLimit=1,this.canTankPass=!0,this.canBulletPass=!0;break;case a.BUILDING.WATER:this.destroyLimit=100,this.canTankPass=!1,this.canBulletPass=!0;break;default:this.destroyLimit=100,this.canTankPass=!0,this.canBulletPass=!0}}return t.prototype.beAttacked=function(t){t.damage>=this.destroyLimit&&(this.alive=!1)},t.prototype.draw=function(){this.alive&&s.CONTEXT.drawImage(a.IMAGE,16*this.type,96,16,16,this.coordinate.x-8,this.coordinate.y-8,16,16)},t}();e.Building=c}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,